@page "/register"

@using SportQuestTrackerUI.Models
@using SportQuestTrackerUI.Contracts

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<div class="card">
    <h3 class="card-title">Register Now</h3>
    @if (!response)
    {
        <div class="alert alert-danger">
            <p>Something went wrong with the registration attempt</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="Model" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="firstname">First name</label>
                <InputText Id="firstname" type="text" class="form-control" @bind-Value="Model.FirstName" />
                <ValidationMessage For="@(() => Model.FirstName)" />
            </div>
            <div class="form-group">
                <label for="surname">Surname</label>
                <InputText Id="surname" type="text" class="form-control" @bind-Value="Model.Surname" />
                <ValidationMessage For="@(() => Model.Surname)" />
            </div>
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                <ValidationMessage For="@(() => Model.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmpassword">Confirm Password</label>
                <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
                <ValidationMessage For="@(() => Model.ConfirmPassword)" />
            </div>
            <div class="form-group">
                <label for="phone">Phone number</label>
                <InputText Id="phone" type="text" class="form-control" @bind-Value="Model.Phone" />
                <ValidationMessage For="@(() => Model.Phone)" />
            </div>
            <button type="submit" class="btn btn-primary">Register</button>

        </EditForm>
    </div>
</div>

@code {
    private readonly RegistrationModel Model = new RegistrationModel();
    bool response = true;

    private async Task HandleRegistration()
    {
        response = await _authRepo.Register(Model);

        if (response)
        {
            _navMan.NavigateTo("users/login");
        }
    }
}